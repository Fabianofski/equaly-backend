// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/expense": {
            "post": {
                "description": "Creates a new Expense for an Expense List",
                "tags": [
                    "Expenses"
                ],
                "summary": "Create Expense",
                "parameters": [
                    {
                        "description": "Expense Data",
                        "name": "expense",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Expense"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/expense-list": {
            "post": {
                "description": "Creates a new Expense list with given data for a specified user",
                "tags": [
                    "Expenses"
                ],
                "summary": "Create Expense List",
                "parameters": [
                    {
                        "description": "Expense List Data",
                        "name": "expenseList",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ExpenseList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/expense-lists": {
            "get": {
                "description": "Retrieves the list of expenses for a specified user.",
                "tags": [
                    "Expenses"
                ],
                "summary": "Get Expense Lists",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID to retrieve expenses for",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user expenses",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Expense"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Expense": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "buyer": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "expenseListId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "participants": {
                    "type": "string"
                }
            }
        },
        "models.ExpenseList": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "creatorId": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "emoji": {
                    "type": "string"
                },
                "expenses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Expense"
                    }
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "totalCost": {
                    "type": "number"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Equaly Backend",
	Description:      "This is the backend for the equaly cost management app",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
